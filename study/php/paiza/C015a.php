<?php
$c = new C015();
$c->execute();
$c->output();

class C015
{
    private $N;
    private $point = 0;

    public function __construct()
    {
        $this->N = getStdin(); 
    }

    public function execute()
    {
        for($i = 0; $i < $this->N; $i++) {
            list($d, $p) = explode(' ',getStdin());
            $this->point += $this->calPoint($d, $p);
        }
    }

    private function calPoint($d, $p)
    {
        if (strpos($d, '3') !== FALSE) {
            return floor($p * 0.03);
            break;
        }
        if (strpos($d, '5') !== FALSE) {
            return floor($p * 0.05);
            break;
        }
        return floor($p * 0.01);
    }

    public function output()
    {
        echo $this->point, "\n";
    }
}

function getStdin()
{
    return trim(fgets(STDIN));
}

/*
<<問題>>
今は月末。そろそろ今月の家計簿をつけないといけません。 あなたの手元には、とあるスーパーマーケットのレシートの山があります。

スーパーマーケットにはポイントカードが導入されていて、買い物をするたびに購入金額に応じたポイントがたまります。 加算されるポイントは次の 3 つのルールに従って決定されます。

1. 通常は購入金額の 1 ％（小数点以下切り捨て）とする
2. ただし、3 のつく日は購入金額の 3 ％（小数点以下切り捨て）とする
3. ただし、5 のつく日は購入金額の 5 ％（小数点以下切り捨て）とする

あなたはポイントカードに、今、何ポイントたまっているのかが気になりました。 レシートの数が多いので、手で計算するのは大変です。

早速、これを計算するプログラムを書きましょう。 ただし、今月のはじめには全くポイントがたまっておらず（0 ポイント）、また、今月中ポイントは消費されなかったものとします。

<<入出力例>>
--入力
    3
    1 1024
    11 2048
    21 4196
--出力
    71

<<入力>>
力は以下のフォーマットで与えられます。

    N　　　　#各レシートの数
    d_1 p_1　#1枚目のレシートの日付 d_1 日, 購入金額 p_1 円
    d_2 p_2　#2枚目のレシートの日付 d_2 日, 購入金額 p_2 円
    ...
    d_N p_N　#N枚目のレシートの日付 d_N 日, 購入金額 p_N 円

1行目には今月分のレシートの枚数を表す整数 N が入力されます。続く N 行には各レシートの情報が入力されます。
すなわち、d_i p_i は i 枚目のレシートが発行された日付が d_i 日であり、このときの購入金額が p_i 円であることを表します。

<<出力>>
今月末にポイントカードにたまっているポイントの値を１行に出力してください。

*/
